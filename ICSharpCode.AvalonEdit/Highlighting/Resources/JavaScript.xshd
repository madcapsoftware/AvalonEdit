<?xml version="1.0"?>
<SyntaxDefinition name="JavaScript" extensions=".js" xmlns="http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008">
  <RuleSet>
    <Keywords color="keyword">
      <Word>in</Word>
      <Word>of</Word>
      <Word>if</Word>
      <Word>for</Word>
      <Word>while</Word>
      <Word>finally</Word>
      <Word>var</Word>
      <Word>new</Word>
      <Word>function</Word>
      <Word>do</Word>
      <Word>return</Word>
      <Word>void</Word>
      <Word>else</Word>
      <Word>break</Word>
      <Word>catch</Word>
      <Word>instanceof</Word>
      <Word>with</Word>
      <Word>throw</Word>
      <Word>case</Word>
      <Word>default</Word>
      <Word>try</Word>
      <Word>this</Word>
      <Word>switch</Word>
      <Word>continue</Word>
      <Word>typeof</Word>
      <Word>delete</Word>
      <Word>let</Word>
      <Word>yield</Word>
      <Word>const</Word>
      <Word>export</Word>
      <Word>super</Word>
      <Word>debugger</Word>
      <Word>as</Word>
      <Word>async</Word>
      <Word>await</Word>
      <Word>static</Word>
      <Word>import</Word>
      <Word>from</Word>
      <Word>as</Word>
    </Keywords>
    <Keywords color="literal">
      <Word>true</Word>
      <Word>false</Word>
      <Word>null</Word>
      <Word>undefined</Word>
      <Word>NaN</Word>
      <Word>Infinity</Word>
    </Keywords>
    <Keywords color="built_in">
      <Word>eval</Word>
      <Word>isFinite</Word>
      <Word>isNaN</Word>
      <Word>parseFloat</Word>
      <Word>parseInt</Word>
      <Word>decodeURI</Word>
      <Word>decodeURIComponent</Word>
      <Word>encodeURI</Word>
      <Word>encodeURIComponent</Word>
      <Word>escape</Word>
      <Word>unescape</Word>
      <Word>Object</Word>
      <Word>Function</Word>
      <Word>Boolean</Word>
      <Word>Error</Word>
      <Word>EvalError</Word>
      <Word>InternalError</Word>
      <Word>RangeError</Word>
      <Word>ReferenceError</Word>
      <Word>StopIteration</Word>
      <Word>SyntaxError</Word>
      <Word>TypeError</Word>
      <Word>URIError</Word>
      <Word>Number</Word>
      <Word>Math</Word>
      <Word>Date</Word>
      <Word>String</Word>
      <Word>RegExp</Word>
      <Word>Array</Word>
      <Word>Float32Array</Word>
      <Word>Float64Array</Word>
      <Word>Int16Array</Word>
      <Word>Int32Array</Word>
      <Word>Int8Array</Word>
      <Word>Uint16Array</Word>
      <Word>Uint32Array</Word>
      <Word>Uint8Array</Word>
      <Word>Uint8ClampedArray</Word>
      <Word>ArrayBuffer</Word>
      <Word>DataView</Word>
      <Word>JSON</Word>
      <Word>Intl</Word>
      <Word>arguments</Word>
      <Word>require</Word>
      <Word>module</Word>
      <Word>console</Word>
      <Word>window</Word>
      <Word>document</Word>
      <Word>Symbol</Word>
      <Word>Set</Word>
      <Word>Map</Word>
      <Word>WeakSet</Word>
      <Word>WeakMap</Word>
      <Word>Proxy</Word>
      <Word>Reflect</Word>
      <Word>Promise</Word>
    </Keywords>
    <Rule color="meta">^\s*['"]use (strict|asm)['"]</Rule>
    <Span ruleSet="RuleSet1" color="string">
      <Begin>'</Begin>
      <End>'</End>
    </Span>
    <Span ruleSet="RuleSet2" color="string">
      <Begin>"</Begin>
      <End>"</End>
    </Span>
    <Span ruleSet="RuleSet3" color="string">
      <Begin>`</Begin>
      <End>`</End>
    </Span>
    <Span ruleSet="RuleSet7" multiline="true" color="comment">
      <Begin>//</Begin>
      <End>$</End>
    </Span>
    <Span ruleSet="RuleSet8" multiline="true" color="comment">
      <Begin>/\*</Begin>
      <End>\*/</End>
    </Span>
    <Rule color="number">\b(0[bB][01]+)</Rule>
    <Rule color="number">\b(0[oO][0-7]+)</Rule>
    <Rule color="number">(-?)(\b0[xX][a-fA-F0-9]+|(\b\d+(\.\d*)?|\.\d+)([eE][-+]?\d+)?)</Rule>
    <Rule>[{,]\s*</Rule>
    <Rule>(!|!=|!==|%|%=|&amp;|&amp;&amp;|&amp;=|\*|\*=|\+|\+=|,|-|-=|/=|/|:|;|&lt;&lt;|&lt;&lt;=|&lt;=|&lt;|===|==|=|&gt;&gt;&gt;=|&gt;&gt;=|&gt;=|&gt;&gt;&gt;|&gt;&gt;|&gt;|\?|\[|\{|\(|\^|\^=|\||\|=|\|\||~|\b(case|return|throw)\b)\s*</Rule>
    <Span ruleSet="RuleSet9">
      <Begin>(?=\b(function)\s)</Begin>
      <End>\{</End>
    </Span>
    <Rule>\$[(.]</Rule>
    <Rule>\.\s*[a-zA-Z_]\w*</Rule>
    <Span ruleSet="RuleSet11">
      <Begin>(?=\b(class)\s)</Begin>
      <End>[{;=]</End>
    </Span>
    <Span ruleSet="RuleSet13">
      <Begin>(?=\b(constructor)\s)</Begin>
      <End>\{</End>
    </Span>
  </RuleSet>
  <RuleSet name="RuleSet0"/>
  <RuleSet name="RuleSet1">
    <Rule>\\[\s\S]</Rule>
  </RuleSet>
  <RuleSet name="RuleSet2">
    <Rule>\\[\s\S]</Rule>
    <Rule color="subst">\\[abfnrtv]\|\\x[0-9a-fA-F]*\\\|%[-+# *.0-9]*[dioxXucsfeEgGp]</Rule>
  </RuleSet>
  <RuleSet name="RuleSet3">
    <Rule>\\[\s\S]</Rule>
    <Span ruleSet="RuleSet4" color="subst">
      <Begin>\$\{</Begin>
      <End>\}</End>
    </Span>
  </RuleSet>
  <RuleSet name="RuleSet4">
    <Keywords color="keyword">
      <Word>in</Word>
      <Word>of</Word>
      <Word>if</Word>
      <Word>for</Word>
      <Word>while</Word>
      <Word>finally</Word>
      <Word>var</Word>
      <Word>new</Word>
      <Word>function</Word>
      <Word>do</Word>
      <Word>return</Word>
      <Word>void</Word>
      <Word>else</Word>
      <Word>break</Word>
      <Word>catch</Word>
      <Word>instanceof</Word>
      <Word>with</Word>
      <Word>throw</Word>
      <Word>case</Word>
      <Word>default</Word>
      <Word>try</Word>
      <Word>this</Word>
      <Word>switch</Word>
      <Word>continue</Word>
      <Word>typeof</Word>
      <Word>delete</Word>
      <Word>let</Word>
      <Word>yield</Word>
      <Word>const</Word>
      <Word>export</Word>
      <Word>super</Word>
      <Word>debugger</Word>
      <Word>as</Word>
      <Word>async</Word>
      <Word>await</Word>
      <Word>static</Word>
      <Word>import</Word>
      <Word>from</Word>
      <Word>as</Word>
    </Keywords>
    <Keywords color="literal">
      <Word>true</Word>
      <Word>false</Word>
      <Word>null</Word>
      <Word>undefined</Word>
      <Word>NaN</Word>
      <Word>Infinity</Word>
    </Keywords>
    <Keywords color="built_in">
      <Word>eval</Word>
      <Word>isFinite</Word>
      <Word>isNaN</Word>
      <Word>parseFloat</Word>
      <Word>parseInt</Word>
      <Word>decodeURI</Word>
      <Word>decodeURIComponent</Word>
      <Word>encodeURI</Word>
      <Word>encodeURIComponent</Word>
      <Word>escape</Word>
      <Word>unescape</Word>
      <Word>Object</Word>
      <Word>Function</Word>
      <Word>Boolean</Word>
      <Word>Error</Word>
      <Word>EvalError</Word>
      <Word>InternalError</Word>
      <Word>RangeError</Word>
      <Word>ReferenceError</Word>
      <Word>StopIteration</Word>
      <Word>SyntaxError</Word>
      <Word>TypeError</Word>
      <Word>URIError</Word>
      <Word>Number</Word>
      <Word>Math</Word>
      <Word>Date</Word>
      <Word>String</Word>
      <Word>RegExp</Word>
      <Word>Array</Word>
      <Word>Float32Array</Word>
      <Word>Float64Array</Word>
      <Word>Int16Array</Word>
      <Word>Int32Array</Word>
      <Word>Int8Array</Word>
      <Word>Uint16Array</Word>
      <Word>Uint32Array</Word>
      <Word>Uint8Array</Word>
      <Word>Uint8ClampedArray</Word>
      <Word>ArrayBuffer</Word>
      <Word>DataView</Word>
      <Word>JSON</Word>
      <Word>Intl</Word>
      <Word>arguments</Word>
      <Word>require</Word>
      <Word>module</Word>
      <Word>console</Word>
      <Word>window</Word>
      <Word>document</Word>
      <Word>Symbol</Word>
      <Word>Set</Word>
      <Word>Map</Word>
      <Word>WeakSet</Word>
      <Word>WeakMap</Word>
      <Word>Proxy</Word>
      <Word>Reflect</Word>
      <Word>Promise</Word>
    </Keywords>
    <Span ruleSet="RuleSet1" color="string">
      <Begin>'</Begin>
      <End>'</End>
    </Span>
    <Span ruleSet="RuleSet2" color="string">
      <Begin>"</Begin>
      <End>"</End>
    </Span>
    <Span ruleSet="RuleSet3" color="string">
      <Begin>`</Begin>
      <End>`</End>
    </Span>
    <Rule color="number">\b(0[bB][01]+)</Rule>
    <Rule color="number">\b(0[oO][0-7]+)</Rule>
    <Rule color="number">(-?)(\b0[xX][a-fA-F0-9]+|(\b\d+(\.\d*)?|\.\d+)([eE][-+]?\d+)?)</Rule>
    <Span ruleSet="RuleSet5" color="regexp">
      <Begin>\/</Begin>
      <End>\/[gimuy]*</End>
    </Span>
  </RuleSet>
  <RuleSet name="RuleSet5">
    <Rule>\\[\s\S]</Rule>
    <Span ruleSet="RuleSet6">
      <Begin>\[</Begin>
      <End>\]</End>
    </Span>
  </RuleSet>
  <RuleSet name="RuleSet6">
    <Rule>\\[\s\S]</Rule>
  </RuleSet>
  <RuleSet name="RuleSet7">
    <Rule>\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b</Rule>
    <Rule color="doctag">(?:TODO|FIXME|NOTE|BUG|XXX):</Rule>
  </RuleSet>
  <RuleSet name="RuleSet8">
    <Rule>\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b</Rule>
    <Rule color="doctag">(?:TODO|FIXME|NOTE|BUG|XXX):</Rule>
  </RuleSet>
  <RuleSet name="RuleSet9">
    <Keywords color="keyword">
      <Word>function</Word>
    </Keywords>
    <Rule color="title">[A-Za-z$_][0-9A-Za-z$_]*</Rule>
    <Span ruleSet="RuleSet10">
      <Begin>\(</Begin>
      <End>\)</End>
    </Span>
  </RuleSet>
  <RuleSet name="RuleSet10">
    <Span ruleSet="RuleSet1" color="string">
      <Begin>'</Begin>
      <End>'</End>
    </Span>
    <Span ruleSet="RuleSet2" color="string">
      <Begin>"</Begin>
      <End>"</End>
    </Span>
    <Span ruleSet="RuleSet3" color="string">
      <Begin>`</Begin>
      <End>`</End>
    </Span>
    <Rule color="number">\b(0[bB][01]+)</Rule>
    <Rule color="number">\b(0[oO][0-7]+)</Rule>
    <Rule color="number">(-?)(\b0[xX][a-fA-F0-9]+|(\b\d+(\.\d*)?|\.\d+)([eE][-+]?\d+)?)</Rule>
    <Span ruleSet="RuleSet5" color="regexp">
      <Begin>\/</Begin>
      <End>\/[gimuy]*</End>
    </Span>
    <Span ruleSet="RuleSet8" multiline="true" color="comment">
      <Begin>/\*</Begin>
      <End>\*/</End>
    </Span>
    <Span ruleSet="RuleSet7" multiline="true" color="comment">
      <Begin>//</Begin>
      <End>$</End>
    </Span>
  </RuleSet>
  <RuleSet name="RuleSet11">
    <Keywords color="keyword">
      <Word>class</Word>
    </Keywords>
    <Span ruleSet="RuleSet12">
      <Begin>(?=\b(extends)\s)</Begin>
    </Span>
    <Rule color="title">[a-zA-Z_]\w*</Rule>
  </RuleSet>
  <RuleSet name="RuleSet12">
    <Keywords color="keyword">
      <Word>extends</Word>
    </Keywords>
  </RuleSet>
  <RuleSet name="RuleSet13">
    <Keywords color="keyword">
      <Word>constructor</Word>
    </Keywords>
  </RuleSet>
  <Color name="comment" foreground="#998" fontStyle="italic"/>
  <Color name="keyword" foreground="#333" fontWeight="bold"/>
  <Color name="subst" foreground="#333" fontWeight="bold"/>
  <Color name="number" foreground="#008080"/>
  <Color name="literal" foreground="#008080"/>
  <Color name="string" foreground="#d14"/>
  <Color name="doctag" foreground="#d14"/>
  <Color name="title" foreground="#900" fontWeight="bold"/>
  <Color name="regexp" foreground="#009926"/>
  <Color name="built_in" foreground="#0086b3"/>
  <Color name="meta" foreground="#999" fontWeight="bold"/>
</SyntaxDefinition>